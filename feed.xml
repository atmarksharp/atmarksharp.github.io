<?xml version="1.0" encoding="utf-8" ?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel> <title>slow living in the sky</title><link>http://atmarksharp.github.io</link><description></description><atom:link href="http://atmarksharp.github.io/feed.xml" rel="self" type="application/rss+xml"></atom:link><item><title>3000円のパソコンにLinuxを入れたら快適だった</title><description><![CDATA[<p>週末に中古のパソコンショップに行ったら、パソコンが3000円であったので、Linuxを入れて遊んでみようと思い、買いました。</p>
<p>スペックなかなか良いじゃんと思っていたのが、運の尽き。</p>
<p>買って分かった、実はメモリが <b>256MB</b> …！（泣</p>
<h2>軽量ディストリビューションの導入</h2>
<p>ということで、少しのメモリでも動くような軽量ディストリビューションを探してみました。</p>
<p>試してみたのは次の通りです。</p>
<ul>
<li>Damn Small Linux</li>
<li>Puppy Linux</li>
<li>U...]]></description><pubDate>Tue Sep 10 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/3000-yen-pc-with-linux.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/3000-yen-pc-with-linux.html</guid></item><item><title>個人情報を送信しないGoogle Chromeクローン『SRWare Iron』</title><description><![CDATA[<h2>Chromeは個人情報をGoogleに送っている</h2>
<p>私はよく<b>Google Chrome</b>を使っているのですが、実はGoogleに様々な個人情報を送信しているという事をよく聞きます。</p>
<p>前から個人情報についてはかなり気になっていたのですが、Chromeは使いやすいので別のブラウザにしたくない…。</p>
<p>そんな現状を打破するブラウザ、それが<b><a href="http://www.srware.net/en/software_srware_iron_download.php">『SRWare Iron』</a> </b>（通称：<b>Iro...]]></description><pubDate>Fri Dec 06 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/chrome-clone-srware-iron.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/chrome-clone-srware-iron.html</guid></item><item><title>Xtend - Javaの未来を示すJava方言</title><description><![CDATA[<p>久しぶりに（初めて？）<b>Java</b>の話題です。</p>
<h2>Xtendが登場した経緯</h2>
<blockquote>
<p>この項は、Xtendの良さを説明する前振りなので、飛ばしてもOKです。</p>
</blockquote>
<p><span style="font-size: 120%"><b>枯れた言語 Java</b></span></p>
<p>一時期には一世を風靡したJavaですが、現在のJavaは完全にApacheなどの基板をなす、<b>&quot;枯れた言語&quot;</b>になってしまいました。</p>
<p>JavaAppletが使われなくなっ...]]></description><pubDate>Thu Dec 05 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/xtend-java-dialect.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/xtend-java-dialect.html</guid></item><item><title>AndroidでICカードの残高と履歴を読み取る『EmoneyReader』</title><description><![CDATA[<p>電車に乗る時、買い物などで、SuicaやnanacoなどのICカードの残高が足りなくて焦ったことはありませんか？</p>
<p>そんなときに便利なアプリが、<a href="https://play.google.com/store/apps/details?id=com.kaemashita.android.emoneyreader">『EmoneyReader』</a>です。</p>
<h2>使い方</h2>
<p>まず、準備は次のとおりです。</p>
<blockquote>
<ul>
<li><b>Google Play</b> からインストール</li>
<li>アプリを起動後...]]></description><pubDate>Thu Dec 05 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/android-ic-emoney-reader.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/android-ic-emoney-reader.html</guid></item><item><title>実用的なLisp方言『Script-fu』『Nyquist』『nu』</title><description><![CDATA[<p>久しぶりの更新です。いつの間にか冬になり、そしてもうすぐ今年も終わっちゃいますねー。</p>
<p>私にとってこの一年は、苦労の多い一年でした。皆さんはどうですか？</p>
<hr>
<p>さて本題ですが、ここ最近意外なところでLispに出会ったので紹介します。</p>
<h2>Script-fu (GIMP)</h2>
<p>
<img src="../img/script-fu.png" alt="script-fu.png">
</p>

<p>Script-fuは、GIMPの操作を自動化するためのスクリプト言語です。
<a href="http://docs.gimp.org/j...]]></description><pubDate>Thu Dec 05 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/practical-lisp-dialect.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/practical-lisp-dialect.html</guid></item><item><title>MacでPhotoshopとIllustratorを安く抑える</title><description><![CDATA[<p>いつも頭を悩ませていることがあるのですが、それはAdobeのライセンスです。</p>
<p>パソコンを変えるようなことがあったり、別のパソコンにAdobeが入っていなかったりすると作業が制限されて困ることがあります。</p>
<p>そこで、PhotoshopとIllustratorをAdobe以外のアプリケーションで置き換えられないかということを考えました。今回はMacに限定して考えます。</p>
<h2>GimpとInkscape</h2>
<p>まず真っ先に候補に上がるのは<a href="http://www.gimp.org/">Gimp</a>と<a href="http://...]]></description><pubDate>Fri Oct 04 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/mac-photoshop-illustrator-cheaper.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/mac-photoshop-illustrator-cheaper.html</guid></item><item><title>Stage3Dを使ったFlash/AIRをmxmlcでビルドする方法</title><description><![CDATA[<p><a href="http://www.adobe.com/devnet/flashplayer/stage3d.html">Stage3D</a>を使ったFlashを <i><u>FlashBuilderを使わずに</u></i> 作ろうと思ったのですが、あまり良くまとめられているブログがなかったので、自分なりにまとめてみます。</p>
<h2>Stage3Dとは</h2>
<p>まずStage3Dとは、Flash/AIRの長年の弱点であった、GPUアクセラレーションを提供する機能です。わかりやすく言えば、HTML5におけるWebGLのFlash版です。<u>Flash Player ...]]></description><pubDate>Wed Sep 25 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/stage3d-flash-air-mxmlc.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/stage3d-flash-air-mxmlc.html</guid></item><item><title>LGPLに対する動的リンクの誤解</title><description><![CDATA[<p><span style="color: #fe0600"><i><b>（注意：バージョンにより違いがあるため、必ずご自身でLGPLをお読みください。）</b></i></span></p>
<h2>LGPLに関する噂</h2>
<p>LGPLライブラリとアプリケーションの配布について、例えばGoogle検索すると様々な意見がヒットします。</p>
<blockquote>
<ul>
<li>動的リンクすればLGPLに従う必要はない</li>
<li>動的リンクであれば、リバースエンジニアリングを禁止してもよい</li>
<li>動的リンクであれば、アプリケーションと一緒にLGPLライブラ...]]></description><pubDate>Thu Sep 19 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/lgpl-dynamic-link.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/lgpl-dynamic-link.html</guid></item><item><title>CookieClickerという謎のゲームを自動クリックする方法</title><description><![CDATA[<p>昨日、<a href="http://orteil.dashnet.org/cookieclicker/">CookieClicker</a>という謎のクッキー生産ゲームを知りました。</p>
<p>ちなみに昨日一晩で、これくらいでした。(生産力：2400万/秒）</p>
<p>
<img src="../img/20130916105824.png" alt="20130916105824.png">
</p>

<p>クッキーの数の下にある湯気のようなものは、実はクリックです。もちろん自分でクリックしているわけではなく、自動化しています。</p>
<h2>導入方法</h2>
<p>ま...]]></description><pubDate>Mon Sep 16 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/cookie-clicker-automate.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/cookie-clicker-automate.html</guid></item><item><title>Androidのターミナルを強化する&quot;BusyBox Non-Root&quot;</title><description><![CDATA[<p>Androidのターミナルアプリや、Android SDKのadbを使って、PCからSSHのように<b>Android本体</b>を操作したいときがあります。</p>
<h2>abcコマンド</h2>
<p>adbコマンドはAndroid SDKに入っていて、Androidの設定から、[開発者向けオプション] -&gt; [USBデバッグ] を有効にした上で、</p>
<pre><code>adb shell</code></pre>
<p>と打ち込むと入力が開始されます。</p>
<p>しかし、普段からUNIXやLinuxを使っていると、<b>基本的なコマンドの少なさ</b>に驚きます...]]></description><pubDate>Tue Sep 10 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/android-busybox-non-root.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/android-busybox-non-root.html</guid></item><item><title>Tak関数を使ったsbclのベンチマーク</title><description><![CDATA[<p>SBCL (Steel Bank Common Lisp) についてのベンチマークを検索するといくつかヒットしますが、自分のMacbookAir (2009 Late) で確かめてみました。</p>
<p>Tak（たらい回し関数）の実装は、以下のものです。</p>
<pre><code class="language-lisp">(defun tak (x y z)
 (if (&lt;= x y )
  z 
  (tak (tak (- x 1) y z) (tak (- y 1) z x) (tak (- z 1) x y)))) 

(print (tak 18 9 0))</c...]]></description><pubDate>Sat Aug 31 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/tak-benchmark-with-sbcl.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/tak-benchmark-with-sbcl.html</guid></item><item><title>Project Euler - Problem 4</title><description><![CDATA[<blockquote>
<p>Problem 4 「最大の回文積」</p>
<p>左右どちらから読んでも同じ値になる数を回文数という. 2桁の数の積で表される回文数のうち, 最大のものは 9009 = 91 × 99 である.</p>
<p>では, 3桁の数の積で表される回文数の最大値を求めよ</p>
</blockquote>
<p>今回のポイントは、</p>
<ul>
<li>回文数を判断するために、数値から文字に変換する</li>
<li>二重ループなので、回文数だとしても、前の結果よりも小さくなることがある</li>
<li>結果が重複しないように、y &gt; x の場合はスキップ...]]></description><pubDate>Fri Sep 06 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/project-euler-problem-4.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/project-euler-problem-4.html</guid></item><item><title>Project Euler - Problem 3</title><description><![CDATA[<blockquote>
<p>Problem 3 「最大の素因数」</p>
<p>13195 の素因数は 5, 7, 13, 29 である.</p>
<p>600851475143 の素因数のうち最大のものを求めよ.</p>
</blockquote>
<p>今回のコードの基本的な方針は以下の通りです。</p>
<ul>
<li>x = 2 から順に、mod (n , x) = 0 になるまで x += 1</li>
<li>割り切れるならば、n /= x , result = xとして繰り返す</li>
</ul>
<p>数字が大きいので、何か他のアルゴリズムが必要かと思いましたが、素直に...]]></description><pubDate>Fri Sep 06 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/project-euler-problem-3.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/project-euler-problem-3.html</guid></item><item><title>Project Euler - Problem 2</title><description><![CDATA[<blockquote>
<p>Problem 2 「偶数のフィボナッチ数」</p>
<p>フィボナッチ数列の項は前の2つの項の和である. 最初の2項を 1, 2 とすれば, 最初の10項は以下の通りである.</p>
<p>1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...</p>
<p>数列の項の値が400万より小さい, 偶数値の項の総和を求めよ.</p>
</blockquote>
<p>ちょっと最初に戸惑ったのは、偶数値という意味を「偶数項」と読み違えていたのですが、タイトルを見た後で、あぁ、「値が偶数である項」という意味なのかと納得しました。</p>
<pre...]]></description><pubDate>Fri Sep 06 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/project-euler-problem-2.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/project-euler-problem-2.html</guid></item><item><title>Project Euler - Problem 1</title><description><![CDATA[<p>Common Lispの練習として、今更ながらProject Eulerを解いていこうと思います。</p>
<blockquote>
<p>Problem 1「3と5の倍数」</p>
<p>10未満の自然数のうち, 3 もしくは 5 の倍数になっているものは 3, 5, 6, 9 の4つがあり, これらの合計は 23 になる.</p>
<p>同じようにして, 1000 未満の 3 か 5 の倍数になっている数字の合計を求めよ.</p>
</blockquote>
<p>今回は再帰とループの２種類で解いてみました。</p>
<pre><code class="language-lisp">...]]></description><pubDate>Fri Sep 06 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/project-euler-problem-1.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/project-euler-problem-1.html</guid></item><item><title>Lispの力の源泉 - 同図像性</title><description><![CDATA[<p>上の写真は、&quot;On Lisp&quot;や&quot;ハッカーと画家&quot;などの著者ポール・グレアムです。</p>
<p>ポール・グレアムは、<a href="http://www.paulgraham.com">自身のブログ</a>でLispに関する記事を多く執筆しており、現在はLisp方言の<a href="http://www.paulgraham.com/arc.html">Arc</a>に力を入れているようです。    </p>
<p>以下の内容は、このポール・グレアムのLispに関する知見を元に自分なりにまとめたものです。</p>
<h2>Lispのすごさとは...]]></description><pubDate>Thu Sep 05 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/power-of-lisp-homoiconic.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/power-of-lisp-homoiconic.html</guid></item><item><title>C言語にコンパイルされるオブジェクト指向言語『Vala』</title><description><![CDATA[<p>最近 <a href="https://wiki.gnome.org/Vala">Vala</a> の利点を知りました。</p>
<p>C言語でオブジェクトを扱うための <a href="https://ja.wikipedia.org/wiki/GObject">GObject</a> というのがあるのですが、ある意味無理矢理実装しているために、視認性が悪く、コードも煩雑になります。</p>
<p>Valaは、GObjectを利用したC言語を出力するための言語で、<a href="https://ja.wikipedia.org/wiki/%E5%8F%82%E7%85%A7%E3%8...]]></description><pubDate>Tue Sep 03 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/vala-vs-cpp.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/vala-vs-cpp.html</guid></item><item><title>Sublime Textの'Go to Anything'ライクなVimライブラリ『ctrlp.vim』</title><description><![CDATA[<p><a href="https://github.com/Shougo/unite.vim">Unite.vim</a> は、様々なプラグインが登場するほどメジャーなプラグインですが、例えば基本機能である最近使ったファイルを見るには、</p>
<pre><code class="language-vim">:Unite file_mru</code></pre>
<p>とタイプすると、</p>
<p><img src="../img/20130902140629.png" alt="20130902140629.png"></p>
<p>と表示されます。</p>
<h2>ctrlp.vim...]]></description><pubDate>Mon Sep 02 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/ctrlp-vim-plugin.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/ctrlp-vim-plugin.html</guid></item><item><title>VimScriptのみで実装されたPowerline『vim-airline』</title><description><![CDATA[<p>Vimで有名なプラグインに、<a href="https://github.com/Lokaltog/powerline">Powerline</a> があります。</p>
<p>このプラグインはPythonを必要とします。そこで、Pythonの必要のないPowerlineがないかを調べました。</p>
<h2>vim-airline</h2>
<p>そこで見つけたのが <a href="https://github.com/bling/vim-airline">vim-airline</a> です。</p>
<p><span itemscope itemtype="http://sch...]]></description><pubDate>Mon Sep 02 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/vim-airline.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/vim-airline.html</guid></item><item><title>Amazonで買ってはいけない本 - Wikipediaのコピー本</title><description><![CDATA[<p>今年もあっという間に師走ですね。クリスマスやお正月など、買い物をする機会も多い季節じゃないでしょうか。</p>
<p>自分はAmazonで書籍を買うことが多いのですが、実は<b>Wikipediaのコピー本</b>が出回っていることをご存知でしょうか。</p>
<h2>Wikipediaのコピー本の例</h2>
<p>例えば次のようなものです。<b style="color:red;">（間違っても買わないで下さい）</b></p>
<div class="amazon"><div class="amazlet-box" style="margin-bottom:0px;"><div c...]]></description><pubDate>Fri Dec 06 2013 09:00:00 GMT+0900 (JST)</pubDate><link>http://atmarksharp.github.io/posts/amazon-wikipedia-copy-book.html</link><guid isPermaLink="true">http://atmarksharp.github.io/posts/amazon-wikipedia-copy-book.html</guid></item></channel></rss>